// func consecutively_add(data *[25]uint64)
TEXT Â·consecutively_add(SB),$0-24
	MOVD	data+0(FP), R0

	VLD1.P	16(R0), [V0.D1, V1.D1]
	VLD1.P	16(R0), [V2.D1, V3.D1]
	VLD1.P	16(R0), [V4.D1, V5.D1]
	VLD1.P	16(R0), [V6.D1, V7.D1]
	VLD1.P	16(R0), [V8.D1, V9.D1]
	VLD1.P	16(R0), [V10.D1, V11.D1]
	VLD1.P	16(R0), [V12.D1, V13.D1]
	VLD1.P	16(R0), [V14.D1, V15.D1]
	VLD1.P	16(R0), [V16.D1, V17.D1]
	VLD1.P	16(R0), [V18.D1, V19.D1]
	VLD1.P	16(R0), [V20.D1, V21.D1]
	VLD1.P	16(R0), [V22.D1, V23.D1]
	VLD1 (R0), [V24.D1]

	SUB	$192, R0, R0 // set R0 to the beginning of array "data"

	VADD	V0, V1, V0
	VADD	V2, V3, V2
	VADD	V4, V5, V4
	VADD	V6, V7, V6
	VADD	V8, V9, V8
	VADD	V10, V11, V10
	VADD	V12, V13, V12
	VADD	V14, V15, V14
	VADD	V16, V17, V16
	VADD	V18, V19, V18
	VADD	V20, V21, V20
	VADD	V22, V23, V22
	
	VST1.P	[V0.D1, V1.D1], 16(R0)
	VST1.P	[V2.D1, V3.D1], 16(R0)
	VST1.P	[V4.D1, V5.D1], 16(R0)
	VST1.P	[V6.D1, V7.D1], 16(R0)
	VST1.P	[V8.D1, V9.D1], 16(R0)
	VST1.P	[V10.D1, V11.D1], 16(R0)
	VST1.P	[V12.D1, V13.D1], 16(R0)
	VST1.P	[V14.D1, V15.D1], 16(R0)
	VST1.P	[V16.D1, V17.D1], 16(R0)
	VST1.P	[V18.D1, V19.D1], 16(R0)
	VST1.P	[V20.D1, V21.D1], 16(R0)
	VST1.P	[V22.D1, V23.D1], 16(R0)
	VST1	[V24.D1], (R0)

	RET
